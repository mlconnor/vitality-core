-- generated by grok heavy

-- Facilities: Physical locations like kitchens or dining areas
CREATE TABLE Facilities (
    FacilityID INT PRIMARY KEY,
    Name VARCHAR(100),
    Capacity VARCHAR(100), -- e.g., storage space, oven count
    Location VARCHAR(255),
    Constraints TEXT -- e.g., distance to service areas
);

-- Suppliers: Vendors for ingredients and premade items
CREATE TABLE Suppliers (
    SupplierID INT PRIMARY KEY,
    Name VARCHAR(100),
    ContactInfo TEXT,
    DeliveryFrequency VARCHAR(50), -- e.g., weekly, bi-weekly
    PricingAgreements TEXT,
    ReliabilityRating DECIMAL(3,2) -- e.g., 0.95 for 95% reliability
);

-- Ingredients: Raw materials for recipes
CREATE TABLE Ingredients (
    IngredientID INT PRIMARY KEY,
    Name VARCHAR(100),
    UnitOfMeasure VARCHAR(50), -- e.g., kg, liter
    CostPerUnit DECIMAL(10,2),
    SupplierID INT,
    NutritionalInfo TEXT, -- JSON or text for nutrients
    Seasonality VARCHAR(50), -- e.g., Summer, Year-round
    StorageRequirements TEXT, -- e.g., refrigerate, dry storage
    FOREIGN KEY (SupplierID) REFERENCES Suppliers(SupplierID)
);

-- Recipes: Instructions for preparing menu items
CREATE TABLE Recipes (
    RecipeID INT PRIMARY KEY,
    MenuItemID INT, -- Links to MenuItems (defined later)
    Steps TEXT,
    PreparationTime INT, -- In minutes
    LaborIntensity VARCHAR(50), -- e.g., Low, High
    Yield INT, -- Servings produced
    RequiredSkills TEXT, -- e.g., knife skills, baking
    FOREIGN KEY (MenuItemID) REFERENCES MenuItems(MenuItemID)
);

-- RecipeIngredients: Junction table for Recipes and Ingredients
CREATE TABLE RecipeIngredients (
    RecipeIngredientID INT PRIMARY KEY,
    RecipeID INT,
    IngredientID INT,
    Quantity DECIMAL(10,2),
    Unit VARCHAR(50),
    FOREIGN KEY (RecipeID) REFERENCES Recipes(RecipeID),
    FOREIGN KEY (IngredientID) REFERENCES Ingredients(IngredientID)
);

-- Employees: Staff for production and service
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    Name VARCHAR(100),
    Role VARCHAR(50), -- e.g., Chef, Prep Cook
    Skills TEXT, -- e.g., baking, grilling
    AvailabilitySchedules TEXT, -- JSON or text for shifts
    LaborCost DECIMAL(10,2) -- Hourly rate
);

-- Equipment: Tools and machines
CREATE TABLE Equipment (
    EquipmentID INT PRIMARY KEY,
    Name VARCHAR(100),
    Type VARCHAR(50), -- e.g., Oven, Mixer
    Capacity VARCHAR(100), -- e.g., 10 trays
    MaintenanceSchedule TEXT,
    UsageLogs TEXT -- JSON or text for usage tracking
);

-- NutritionalRequirements: Standards like RDAs, DRIs
CREATE TABLE NutritionalRequirements (
    RequirementID INT PRIMARY KEY,
    Type VARCHAR(50), -- e.g., RDA, DRI
    NutrientDetails TEXT, -- JSON or text for nutrient targets
    CustomerGroupID INT -- Links to CustomerGroups (defined later)
);

-- Diets: Modified or special diets
CREATE TABLE Diets (
    DietID INT PRIMARY KEY,
    Name VARCHAR(100), -- e.g., Low-Sodium, Vegetarian
    Restrictions TEXT,
    ExtensionRules TEXT -- Rules for adapting from master menu
);

-- Budgets: Financial allocations
CREATE TABLE Budgets (
    BudgetID INT PRIMARY KEY,
    Period VARCHAR(50), -- e.g., Daily, Weekly
    TotalAllocation DECIMAL(10,2),
    Category VARCHAR(50), -- e.g., Food, Labor
    VarianceTracking TEXT -- JSON or text for actual vs. planned
);

-- Customers: Profiles of target populations
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    GroupType VARCHAR(100), -- e.g., Age Range, Ethnicity
    Preferences TEXT, -- e.g., cultural, dietary
    FeedbackHistory TEXT, -- JSON or text for past feedback
    NutritionalNeeds TEXT, -- Links to NutritionalRequirements
    FacilityID INT,
    FOREIGN KEY (FacilityID) REFERENCES Facilities(FacilityID)
);

-- CustomerGroups: Groups for nutritional/dietary needs
CREATE TABLE CustomerGroups (
    CustomerGroupID INT PRIMARY KEY,
    Name VARCHAR(100), -- e.g., Elderly, Pediatric
    Demographics TEXT, -- e.g., age, health status
    FacilityID INT,
    FOREIGN KEY (FacilityID) REFERENCES Facilities(FacilityID)
);

-- Purchases: Orders for ingredients/supplies
CREATE TABLE Purchases (
    PurchaseID INT PRIMARY KEY,
    Date DATE,
    SupplierID INTbegin
    ItemID INT,
    Quantity DECIMAL(10,2),
    Cost DECIMAL(10,2),
    DeliveryStatus VARCHAR(50), -- e.g., Ordered, Delivered
    FOREIGN KEY (SupplierID) REFERENCES Suppliers(SupplierID),
    FOREIGN KEY (ItemID) REFERENCES Ingredients(IngredientID)
);

-- Evaluations: Feedback and menu assessments
CREATE TABLE Evaluations (
    EvaluationID INT PRIMARY KEY,
    MenuID INT, -- Links to Menus (defined later)
    MenuItemID INT, -- Optional, for item-specific feedback
    Metrics TEXT, -- JSON or text, e.g., satisfaction score, cost variance
    Comments TEXT,
    FOREIGN KEY (MenuID) REFERENCES Menus(MenuID),
    FOREIGN KEY (MenuItemID) REFERENCES MenuItems(MenuItemID)
);

-- OrdersSales: Customer orders or sales data
CREATE TABLE OrdersSales (
    OrderID INT PRIMARY KEY,
    Date DATETIME,
    MenuItemID INT,
    Quantity INT,
    Revenue DECIMAL(10,2),
    WasteTracking TEXT, -- JSON or text for waste data
    FOREIGN KEY (MenuItemID) REFERENCES MenuItems(MenuItemID)
);

-- MenuTypes: Categories of menus
CREATE TABLE MenuTypes (
    MenuTypeID INT PRIMARY KEY,
    Name VARCHAR(50) -- e.g., Static, Cycle, Single-use
);

-- MealPeriods: Time-based dining slots
CREATE TABLE MealPeriods (
    MealPeriodID INT PRIMARY KEY,
    Name VARCHAR(50), -- e.g., Breakfast, Lunch, Snack
    StartTime TIME,
    EndTime TIME,
    Description TEXT
);

-- Cycles: Rotating menu sets
CREATE TABLE Cycles (
    CycleID INT PRIMARY KEY,
    Name VARCHAR(100), -- e.g., Fall 4-Week Cycle
    DurationWeeks INT,
    StartDate DATE,
    Description TEXT
);

-- Menus: Core menu plans
CREATE TABLE Menus (
    MenuID INT PRIMARY KEY,
    Name VARCHAR(100),
    MenuTypeID INT,
    CycleID INT, -- Nullable, for cycle-linked menus
    StartDate DATE,
    EndDate DATE,
    FacilityID INT,
    FOREIGN KEY (MenuTypeID) REFERENCES MenuTypes(MenuTypeID),
    FOREIGN KEY (CycleID) REFERENCES Cycles(CycleID),
    FOREIGN KEY (FacilityID) REFERENCES Facilities(FacilityID)
);

-- MenuMealPeriods: Links menus to meal periods
CREATE TABLE MenuMealPeriods (
    MenuMealPeriodID INT PRIMARY KEY,
    MenuID INT,
    MealPeriodID INT,
    FOREIGN KEY (MenuID) REFERENCES Menus(MenuID),
    FOREIGN KEY (MealPeriodID) REFERENCES MealPeriods(MealPeriodID)
);

-- MenuItems: Individual food items
CREATE TABLE MenuItems (
    MenuItemID INT PRIMARY KEY,
    Name VARCHAR(100),
    Category VARCHAR(50), -- e.g., Entr√©e, Side, Dessert
    Description TEXT,
    Cost DECIMAL(10,2),
    PortionSize VARCHAR(50),
    NutritionalInfo TEXT, -- JSON or text
    Allergens TEXT
);

-- MenuMealPeriodItems: Assigns items to meal periods
CREATE TABLE MenuMealPeriodItems (
    ID INT PRIMARY KEY,
    MenuMealPeriodID INT,
    MenuItemID INT,
    Position INT, -- Order in the menu
    FOREIGN KEY (MenuMealPeriodID) REFERENCES MenuMealPeriods(MenuMealPeriodID),
    FOREIGN KEY (MenuItemID) REFERENCES MenuItems(MenuItemID)
);

-- CycleAssignments: Maps menus to cycle positions
CREATE TABLE CycleAssignments (
    AssignmentID INT PRIMARY KEY,
    CycleID INT,
    Position INT, -- Day or week number
    MenuID INT,
    FOREIGN KEY (CycleID) REFERENCES Cycles(CycleID),
    FOREIGN KEY (MenuID) REFERENCES Menus(MenuID)
);

-- ProductionSchedules: Plans for preparing menus
CREATE TABLE ProductionSchedules (
    ScheduleID INT PRIMARY KEY,
    MenuID INT,
    DateTime DATETIME,
    EmployeeID INT,
    EquipmentID INT,
    OutputQuantities INT,
    FOREIGN KEY (MenuID) REFERENCES Menus(MenuID),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID),
    FOREIGN KEY (EquipmentID) REFERENCES Equipment(EquipmentID)
);